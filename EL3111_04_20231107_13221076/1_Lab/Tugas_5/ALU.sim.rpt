Simulator report for ALU
Mon Nov 13 13:31:08 2023
Quartus II Version 9.1 Build 350 03/24/2010 Service Pack 2 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. Simulator Summary
  3. Simulator Settings
  4. Simulation Waveforms
  5. Coverage Summary
  6. Complete 1/0-Value Coverage
  7. Missing 1-Value Coverage
  8. Missing 0-Value Coverage
  9. Simulator INI Usage
 10. Simulator Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+--------------------------------------------+
; Simulator Summary                          ;
+-----------------------------+--------------+
; Type                        ; Value        ;
+-----------------------------+--------------+
; Simulation Start Time       ; 0 ps         ;
; Simulation End Time         ; 1.0 us       ;
; Simulation Netlist Size     ; 225 nodes    ;
; Simulation Coverage         ;      54.30 % ;
; Total Number of Transitions ; 35516        ;
; Simulation Breakpoints      ; 0            ;
; Family                      ; Cyclone II   ;
; Device                      ; EP2C5F256C6  ;
+-----------------------------+--------------+


+-------------------------------------------------------------------------------------------------------------------------+
; Simulator Settings                                                                                                      ;
+--------------------------------------------------------------------------------------------+------------+---------------+
; Option                                                                                     ; Setting    ; Default Value ;
+--------------------------------------------------------------------------------------------+------------+---------------+
; Simulation mode                                                                            ; Timing     ; Timing        ;
; Start time                                                                                 ; 0 ns       ; 0 ns          ;
; Simulation results format                                                                  ; CVWF       ;               ;
; Vector input source                                                                        ; ALU.vwf    ;               ;
; Add pins automatically to simulation output waveforms                                      ; On         ; On            ;
; Check outputs                                                                              ; Off        ; Off           ;
; Report simulation coverage                                                                 ; On         ; On            ;
; Display complete 1/0 value coverage report                                                 ; On         ; On            ;
; Display missing 1-value coverage report                                                    ; On         ; On            ;
; Display missing 0-value coverage report                                                    ; On         ; On            ;
; Detect setup and hold time violations                                                      ; Off        ; Off           ;
; Detect glitches                                                                            ; Off        ; Off           ;
; Disable timing delays in Timing Simulation                                                 ; Off        ; Off           ;
; Generate Signal Activity File                                                              ; Off        ; Off           ;
; Generate VCD File for PowerPlay Power Analyzer                                             ; Off        ; Off           ;
; Group bus channels in simulation results                                                   ; Off        ; Off           ;
; Preserve fewer signal transitions to reduce memory requirements                            ; On         ; On            ;
; Trigger vector comparison with the specified mode                                          ; INPUT_EDGE ; INPUT_EDGE    ;
; Disable setup and hold time violations detection in input registers of bi-directional pins ; Off        ; Off           ;
; Overwrite Waveform Inputs With Simulation Outputs                                          ; On         ;               ;
; Perform Glitch Filtering in Timing Simulation                                              ; Auto       ; Auto          ;
+--------------------------------------------------------------------------------------------+------------+---------------+


+----------------------+
; Simulation Waveforms ;
+----------------------+
Waveform report data cannot be output to ASCII.
Please use Quartus II to view the waveform report data.


+--------------------------------------------------------------------+
; Coverage Summary                                                   ;
+-----------------------------------------------------+--------------+
; Type                                                ; Value        ;
+-----------------------------------------------------+--------------+
; Total coverage as a percentage                      ;      54.30 % ;
; Total nodes checked                                 ; 225          ;
; Total output ports checked                          ; 256          ;
; Total output ports with complete 1/0-value coverage ; 139          ;
; Total output ports with no 1/0-value coverage       ; 115          ;
; Total output ports with no 1-value coverage         ; 115          ;
; Total output ports with no 0-value coverage         ; 117          ;
+-----------------------------------------------------+--------------+


The following table displays output ports that toggle between 1 and 0 during simulation.
+--------------------------------------------------------------------------------------+
; Complete 1/0-Value Coverage                                                          ;
+---------------------------------+---------------------------------+------------------+
; Node Name                       ; Output Port Name                ; Output Port Type ;
+---------------------------------+---------------------------------+------------------+
; |ALU|Add0~2                     ; |ALU|Add0~2                     ; combout          ;
; |ALU|Add0~2                     ; |ALU|Add0~3                     ; cout             ;
; |ALU|Add0~4                     ; |ALU|Add0~4                     ; combout          ;
; |ALU|Add0~4                     ; |ALU|Add0~5                     ; cout             ;
; |ALU|Add0~6                     ; |ALU|Add0~6                     ; combout          ;
; |ALU|Add0~6                     ; |ALU|Add0~7                     ; cout             ;
; |ALU|Add0~8                     ; |ALU|Add0~8                     ; combout          ;
; |ALU|Add0~8                     ; |ALU|Add0~9                     ; cout             ;
; |ALU|Add0~10                    ; |ALU|Add0~10                    ; combout          ;
; |ALU|Add0~10                    ; |ALU|Add0~11                    ; cout             ;
; |ALU|Add0~12                    ; |ALU|Add0~12                    ; combout          ;
; |ALU|Add0~12                    ; |ALU|Add0~13                    ; cout             ;
; |ALU|Add0~14                    ; |ALU|Add0~14                    ; combout          ;
; |ALU|Add0~14                    ; |ALU|Add0~15                    ; cout             ;
; |ALU|Add0~16                    ; |ALU|Add0~16                    ; combout          ;
; |ALU|Add0~18                    ; |ALU|Add0~18                    ; combout          ;
; |ALU|Add0~20                    ; |ALU|Add0~20                    ; combout          ;
; |ALU|Add0~22                    ; |ALU|Add0~22                    ; combout          ;
; |ALU|Add0~24                    ; |ALU|Add0~24                    ; combout          ;
; |ALU|Add0~26                    ; |ALU|Add0~26                    ; combout          ;
; |ALU|Add0~28                    ; |ALU|Add0~28                    ; combout          ;
; |ALU|Add0~30                    ; |ALU|Add0~30                    ; combout          ;
; |ALU|Add0~32                    ; |ALU|Add0~32                    ; combout          ;
; |ALU|Add0~34                    ; |ALU|Add0~34                    ; combout          ;
; |ALU|Add0~36                    ; |ALU|Add0~36                    ; combout          ;
; |ALU|Add0~38                    ; |ALU|Add0~38                    ; combout          ;
; |ALU|Add0~40                    ; |ALU|Add0~40                    ; combout          ;
; |ALU|Add0~42                    ; |ALU|Add0~42                    ; combout          ;
; |ALU|Add0~44                    ; |ALU|Add0~44                    ; combout          ;
; |ALU|Add0~46                    ; |ALU|Add0~46                    ; combout          ;
; |ALU|Add0~48                    ; |ALU|Add0~48                    ; combout          ;
; |ALU|Add0~50                    ; |ALU|Add0~50                    ; combout          ;
; |ALU|Add0~52                    ; |ALU|Add0~52                    ; combout          ;
; |ALU|Add0~54                    ; |ALU|Add0~54                    ; combout          ;
; |ALU|Add0~56                    ; |ALU|Add0~56                    ; combout          ;
; |ALU|Add0~58                    ; |ALU|Add0~58                    ; combout          ;
; |ALU|Add0~60                    ; |ALU|Add0~60                    ; combout          ;
; |ALU|Add0~62                    ; |ALU|Add0~62                    ; combout          ;
; |ALU|Add0~64                    ; |ALU|Add0~64                    ; combout          ;
; |ALU|Add0~1                     ; |ALU|Add0~1                     ; combout          ;
; |ALU|cla_32:ADDER|RESULT[0]~0   ; |ALU|cla_32:ADDER|RESULT[0]~0   ; combout          ;
; |ALU|cla_32:ADDER|G[1]          ; |ALU|cla_32:ADDER|G[1]          ; combout          ;
; |ALU|cla_32:ADDER|C[1]~0        ; |ALU|cla_32:ADDER|C[1]~0        ; combout          ;
; |ALU|cla_32:ADDER|RESULT[1]~1   ; |ALU|cla_32:ADDER|RESULT[1]~1   ; combout          ;
; |ALU|cla_32:ADDER|C[2]~1        ; |ALU|cla_32:ADDER|C[2]~1        ; combout          ;
; |ALU|cla_32:ADDER|C[2]~2        ; |ALU|cla_32:ADDER|C[2]~2        ; combout          ;
; |ALU|cla_32:ADDER|C[2]~3        ; |ALU|cla_32:ADDER|C[2]~3        ; combout          ;
; |ALU|cla_32:ADDER|RESULT[2]~2   ; |ALU|cla_32:ADDER|RESULT[2]~2   ; combout          ;
; |ALU|cla_32:ADDER|G[3]          ; |ALU|cla_32:ADDER|G[3]          ; combout          ;
; |ALU|cla_32:ADDER|C[3]~4        ; |ALU|cla_32:ADDER|C[3]~4        ; combout          ;
; |ALU|cla_32:ADDER|RESULT[3]~3   ; |ALU|cla_32:ADDER|RESULT[3]~3   ; combout          ;
; |ALU|cla_32:ADDER|G[4]          ; |ALU|cla_32:ADDER|G[4]          ; combout          ;
; |ALU|cla_32:ADDER|C[4]~5        ; |ALU|cla_32:ADDER|C[4]~5        ; combout          ;
; |ALU|cla_32:ADDER|RESULT[4]~4   ; |ALU|cla_32:ADDER|RESULT[4]~4   ; combout          ;
; |ALU|cla_32:ADDER|G[5]          ; |ALU|cla_32:ADDER|G[5]          ; combout          ;
; |ALU|cla_32:ADDER|C[5]~6        ; |ALU|cla_32:ADDER|C[5]~6        ; combout          ;
; |ALU|cla_32:ADDER|RESULT[5]~5   ; |ALU|cla_32:ADDER|RESULT[5]~5   ; combout          ;
; |ALU|cla_32:ADDER|G[6]          ; |ALU|cla_32:ADDER|G[6]          ; combout          ;
; |ALU|cla_32:ADDER|C[6]~7        ; |ALU|cla_32:ADDER|C[6]~7        ; combout          ;
; |ALU|cla_32:ADDER|RESULT[6]~6   ; |ALU|cla_32:ADDER|RESULT[6]~6   ; combout          ;
; |ALU|cla_32:ADDER|C[7]~8        ; |ALU|cla_32:ADDER|C[7]~8        ; combout          ;
; |ALU|cla_32:ADDER|RESULT[7]~7   ; |ALU|cla_32:ADDER|RESULT[7]~7   ; combout          ;
; |ALU|cla_32:ADDER|C[8]~9        ; |ALU|cla_32:ADDER|C[8]~9        ; combout          ;
; |ALU|cla_32:ADDER|RESULT[8]~8   ; |ALU|cla_32:ADDER|RESULT[8]~8   ; combout          ;
; |ALU|cla_32:ADDER|C[9]~10       ; |ALU|cla_32:ADDER|C[9]~10       ; combout          ;
; |ALU|cla_32:ADDER|RESULT[9]~9   ; |ALU|cla_32:ADDER|RESULT[9]~9   ; combout          ;
; |ALU|cla_32:ADDER|C[10]~11      ; |ALU|cla_32:ADDER|C[10]~11      ; combout          ;
; |ALU|cla_32:ADDER|RESULT[10]~10 ; |ALU|cla_32:ADDER|RESULT[10]~10 ; combout          ;
; |ALU|cla_32:ADDER|C[11]~12      ; |ALU|cla_32:ADDER|C[11]~12      ; combout          ;
; |ALU|cla_32:ADDER|RESULT[11]~11 ; |ALU|cla_32:ADDER|RESULT[11]~11 ; combout          ;
; |ALU|cla_32:ADDER|C[12]~13      ; |ALU|cla_32:ADDER|C[12]~13      ; combout          ;
; |ALU|cla_32:ADDER|RESULT[12]~12 ; |ALU|cla_32:ADDER|RESULT[12]~12 ; combout          ;
; |ALU|cla_32:ADDER|C[13]~14      ; |ALU|cla_32:ADDER|C[13]~14      ; combout          ;
; |ALU|cla_32:ADDER|RESULT[13]~13 ; |ALU|cla_32:ADDER|RESULT[13]~13 ; combout          ;
; |ALU|cla_32:ADDER|C[14]~15      ; |ALU|cla_32:ADDER|C[14]~15      ; combout          ;
; |ALU|cla_32:ADDER|RESULT[14]~14 ; |ALU|cla_32:ADDER|RESULT[14]~14 ; combout          ;
; |ALU|cla_32:ADDER|C[15]~16      ; |ALU|cla_32:ADDER|C[15]~16      ; combout          ;
; |ALU|cla_32:ADDER|RESULT[15]~15 ; |ALU|cla_32:ADDER|RESULT[15]~15 ; combout          ;
; |ALU|cla_32:ADDER|RESULT[16]~16 ; |ALU|cla_32:ADDER|RESULT[16]~16 ; combout          ;
; |ALU|cla_32:ADDER|RESULT[17]~17 ; |ALU|cla_32:ADDER|RESULT[17]~17 ; combout          ;
; |ALU|cla_32:ADDER|RESULT[18]~18 ; |ALU|cla_32:ADDER|RESULT[18]~18 ; combout          ;
; |ALU|cla_32:ADDER|RESULT[19]~19 ; |ALU|cla_32:ADDER|RESULT[19]~19 ; combout          ;
; |ALU|cla_32:ADDER|RESULT[20]~20 ; |ALU|cla_32:ADDER|RESULT[20]~20 ; combout          ;
; |ALU|cla_32:ADDER|RESULT[21]~21 ; |ALU|cla_32:ADDER|RESULT[21]~21 ; combout          ;
; |ALU|cla_32:ADDER|RESULT[22]~22 ; |ALU|cla_32:ADDER|RESULT[22]~22 ; combout          ;
; |ALU|cla_32:ADDER|RESULT[23]~23 ; |ALU|cla_32:ADDER|RESULT[23]~23 ; combout          ;
; |ALU|cla_32:ADDER|RESULT[24]~24 ; |ALU|cla_32:ADDER|RESULT[24]~24 ; combout          ;
; |ALU|cla_32:ADDER|RESULT[25]~25 ; |ALU|cla_32:ADDER|RESULT[25]~25 ; combout          ;
; |ALU|cla_32:ADDER|RESULT[26]~26 ; |ALU|cla_32:ADDER|RESULT[26]~26 ; combout          ;
; |ALU|cla_32:ADDER|RESULT[27]~27 ; |ALU|cla_32:ADDER|RESULT[27]~27 ; combout          ;
; |ALU|cla_32:ADDER|RESULT[28]~28 ; |ALU|cla_32:ADDER|RESULT[28]~28 ; combout          ;
; |ALU|cla_32:ADDER|RESULT[29]~29 ; |ALU|cla_32:ADDER|RESULT[29]~29 ; combout          ;
; |ALU|cla_32:ADDER|RESULT[30]~30 ; |ALU|cla_32:ADDER|RESULT[30]~30 ; combout          ;
; |ALU|cla_32:ADDER|RESULT[31]~31 ; |ALU|cla_32:ADDER|RESULT[31]~31 ; combout          ;
; |ALU|RESULT[0]                  ; |ALU|RESULT[0]                  ; padio            ;
; |ALU|RESULT[1]                  ; |ALU|RESULT[1]                  ; padio            ;
; |ALU|RESULT[2]                  ; |ALU|RESULT[2]                  ; padio            ;
; |ALU|RESULT[3]                  ; |ALU|RESULT[3]                  ; padio            ;
; |ALU|RESULT[4]                  ; |ALU|RESULT[4]                  ; padio            ;
; |ALU|RESULT[5]                  ; |ALU|RESULT[5]                  ; padio            ;
; |ALU|RESULT[6]                  ; |ALU|RESULT[6]                  ; padio            ;
; |ALU|RESULT[7]                  ; |ALU|RESULT[7]                  ; padio            ;
; |ALU|RESULT[8]                  ; |ALU|RESULT[8]                  ; padio            ;
; |ALU|RESULT[9]                  ; |ALU|RESULT[9]                  ; padio            ;
; |ALU|RESULT[10]                 ; |ALU|RESULT[10]                 ; padio            ;
; |ALU|RESULT[11]                 ; |ALU|RESULT[11]                 ; padio            ;
; |ALU|RESULT[12]                 ; |ALU|RESULT[12]                 ; padio            ;
; |ALU|RESULT[13]                 ; |ALU|RESULT[13]                 ; padio            ;
; |ALU|RESULT[14]                 ; |ALU|RESULT[14]                 ; padio            ;
; |ALU|RESULT[15]                 ; |ALU|RESULT[15]                 ; padio            ;
; |ALU|RESULT[16]                 ; |ALU|RESULT[16]                 ; padio            ;
; |ALU|RESULT[17]                 ; |ALU|RESULT[17]                 ; padio            ;
; |ALU|RESULT[18]                 ; |ALU|RESULT[18]                 ; padio            ;
; |ALU|RESULT[19]                 ; |ALU|RESULT[19]                 ; padio            ;
; |ALU|RESULT[20]                 ; |ALU|RESULT[20]                 ; padio            ;
; |ALU|RESULT[21]                 ; |ALU|RESULT[21]                 ; padio            ;
; |ALU|RESULT[22]                 ; |ALU|RESULT[22]                 ; padio            ;
; |ALU|RESULT[23]                 ; |ALU|RESULT[23]                 ; padio            ;
; |ALU|RESULT[24]                 ; |ALU|RESULT[24]                 ; padio            ;
; |ALU|RESULT[25]                 ; |ALU|RESULT[25]                 ; padio            ;
; |ALU|RESULT[26]                 ; |ALU|RESULT[26]                 ; padio            ;
; |ALU|RESULT[27]                 ; |ALU|RESULT[27]                 ; padio            ;
; |ALU|RESULT[28]                 ; |ALU|RESULT[28]                 ; padio            ;
; |ALU|RESULT[29]                 ; |ALU|RESULT[29]                 ; padio            ;
; |ALU|RESULT[30]                 ; |ALU|RESULT[30]                 ; padio            ;
; |ALU|RESULT[31]                 ; |ALU|RESULT[31]                 ; padio            ;
; |ALU|OPRND_1[0]                 ; |ALU|OPRND_1[0]~corein          ; combout          ;
; |ALU|OP_SEL                     ; |ALU|OP_SEL~corein              ; combout          ;
; |ALU|OPRND_2[0]                 ; |ALU|OPRND_2[0]~corein          ; combout          ;
; |ALU|OPRND_1[1]                 ; |ALU|OPRND_1[1]~corein          ; combout          ;
; |ALU|OPRND_2[1]                 ; |ALU|OPRND_2[1]~corein          ; combout          ;
; |ALU|OPRND_1[2]                 ; |ALU|OPRND_1[2]~corein          ; combout          ;
; |ALU|OPRND_2[2]                 ; |ALU|OPRND_2[2]~corein          ; combout          ;
; |ALU|OPRND_1[3]                 ; |ALU|OPRND_1[3]~corein          ; combout          ;
; |ALU|OPRND_2[3]                 ; |ALU|OPRND_2[3]~corein          ; combout          ;
; |ALU|OPRND_1[4]                 ; |ALU|OPRND_1[4]~corein          ; combout          ;
; |ALU|OPRND_2[4]                 ; |ALU|OPRND_2[4]~corein          ; combout          ;
; |ALU|OPRND_1[5]                 ; |ALU|OPRND_1[5]~corein          ; combout          ;
; |ALU|OPRND_2[5]                 ; |ALU|OPRND_2[5]~corein          ; combout          ;
+---------------------------------+---------------------------------+------------------+


The following table displays output ports that do not toggle to 1 during simulation.
+----------------------------------------------------------------------------+
; Missing 1-Value Coverage                                                   ;
+----------------------------+----------------------------+------------------+
; Node Name                  ; Output Port Name           ; Output Port Type ;
+----------------------------+----------------------------+------------------+
; |ALU|Add0~16               ; |ALU|Add0~17               ; cout             ;
; |ALU|Add0~18               ; |ALU|Add0~19               ; cout             ;
; |ALU|Add0~20               ; |ALU|Add0~21               ; cout             ;
; |ALU|Add0~22               ; |ALU|Add0~23               ; cout             ;
; |ALU|Add0~24               ; |ALU|Add0~25               ; cout             ;
; |ALU|Add0~26               ; |ALU|Add0~27               ; cout             ;
; |ALU|Add0~28               ; |ALU|Add0~29               ; cout             ;
; |ALU|Add0~30               ; |ALU|Add0~31               ; cout             ;
; |ALU|Add0~32               ; |ALU|Add0~33               ; cout             ;
; |ALU|Add0~34               ; |ALU|Add0~35               ; cout             ;
; |ALU|Add0~36               ; |ALU|Add0~37               ; cout             ;
; |ALU|Add0~38               ; |ALU|Add0~39               ; cout             ;
; |ALU|Add0~40               ; |ALU|Add0~41               ; cout             ;
; |ALU|Add0~42               ; |ALU|Add0~43               ; cout             ;
; |ALU|Add0~44               ; |ALU|Add0~45               ; cout             ;
; |ALU|Add0~46               ; |ALU|Add0~47               ; cout             ;
; |ALU|Add0~48               ; |ALU|Add0~49               ; cout             ;
; |ALU|Add0~50               ; |ALU|Add0~51               ; cout             ;
; |ALU|Add0~52               ; |ALU|Add0~53               ; cout             ;
; |ALU|Add0~54               ; |ALU|Add0~55               ; cout             ;
; |ALU|Add0~56               ; |ALU|Add0~57               ; cout             ;
; |ALU|Add0~58               ; |ALU|Add0~59               ; cout             ;
; |ALU|Add0~60               ; |ALU|Add0~61               ; cout             ;
; |ALU|Add0~62               ; |ALU|Add0~63               ; cout             ;
; |ALU|cla_32:ADDER|G[7]     ; |ALU|cla_32:ADDER|G[7]     ; combout          ;
; |ALU|cla_32:ADDER|G[8]     ; |ALU|cla_32:ADDER|G[8]     ; combout          ;
; |ALU|cla_32:ADDER|G[9]     ; |ALU|cla_32:ADDER|G[9]     ; combout          ;
; |ALU|cla_32:ADDER|G[10]    ; |ALU|cla_32:ADDER|G[10]    ; combout          ;
; |ALU|cla_32:ADDER|G[11]    ; |ALU|cla_32:ADDER|G[11]    ; combout          ;
; |ALU|cla_32:ADDER|G[12]    ; |ALU|cla_32:ADDER|G[12]    ; combout          ;
; |ALU|cla_32:ADDER|G[13]    ; |ALU|cla_32:ADDER|G[13]    ; combout          ;
; |ALU|cla_32:ADDER|G[14]    ; |ALU|cla_32:ADDER|G[14]    ; combout          ;
; |ALU|cla_32:ADDER|G[15]    ; |ALU|cla_32:ADDER|G[15]    ; combout          ;
; |ALU|cla_32:ADDER|G[16]    ; |ALU|cla_32:ADDER|G[16]    ; combout          ;
; |ALU|cla_32:ADDER|C[16]~17 ; |ALU|cla_32:ADDER|C[16]~17 ; combout          ;
; |ALU|cla_32:ADDER|G[17]    ; |ALU|cla_32:ADDER|G[17]    ; combout          ;
; |ALU|cla_32:ADDER|C[17]~18 ; |ALU|cla_32:ADDER|C[17]~18 ; combout          ;
; |ALU|cla_32:ADDER|G[18]    ; |ALU|cla_32:ADDER|G[18]    ; combout          ;
; |ALU|cla_32:ADDER|C[18]~19 ; |ALU|cla_32:ADDER|C[18]~19 ; combout          ;
; |ALU|cla_32:ADDER|G[19]    ; |ALU|cla_32:ADDER|G[19]    ; combout          ;
; |ALU|cla_32:ADDER|C[19]~20 ; |ALU|cla_32:ADDER|C[19]~20 ; combout          ;
; |ALU|cla_32:ADDER|G[20]    ; |ALU|cla_32:ADDER|G[20]    ; combout          ;
; |ALU|cla_32:ADDER|C[20]~21 ; |ALU|cla_32:ADDER|C[20]~21 ; combout          ;
; |ALU|cla_32:ADDER|G[21]    ; |ALU|cla_32:ADDER|G[21]    ; combout          ;
; |ALU|cla_32:ADDER|C[21]~22 ; |ALU|cla_32:ADDER|C[21]~22 ; combout          ;
; |ALU|cla_32:ADDER|G[22]    ; |ALU|cla_32:ADDER|G[22]    ; combout          ;
; |ALU|cla_32:ADDER|C[22]~23 ; |ALU|cla_32:ADDER|C[22]~23 ; combout          ;
; |ALU|cla_32:ADDER|G[23]    ; |ALU|cla_32:ADDER|G[23]    ; combout          ;
; |ALU|cla_32:ADDER|C[23]~24 ; |ALU|cla_32:ADDER|C[23]~24 ; combout          ;
; |ALU|cla_32:ADDER|G[24]    ; |ALU|cla_32:ADDER|G[24]    ; combout          ;
; |ALU|cla_32:ADDER|C[24]~25 ; |ALU|cla_32:ADDER|C[24]~25 ; combout          ;
; |ALU|cla_32:ADDER|G[25]    ; |ALU|cla_32:ADDER|G[25]    ; combout          ;
; |ALU|cla_32:ADDER|C[25]~26 ; |ALU|cla_32:ADDER|C[25]~26 ; combout          ;
; |ALU|cla_32:ADDER|G[26]    ; |ALU|cla_32:ADDER|G[26]    ; combout          ;
; |ALU|cla_32:ADDER|C[26]~27 ; |ALU|cla_32:ADDER|C[26]~27 ; combout          ;
; |ALU|cla_32:ADDER|G[27]    ; |ALU|cla_32:ADDER|G[27]    ; combout          ;
; |ALU|cla_32:ADDER|C[27]~28 ; |ALU|cla_32:ADDER|C[27]~28 ; combout          ;
; |ALU|cla_32:ADDER|G[28]    ; |ALU|cla_32:ADDER|G[28]    ; combout          ;
; |ALU|cla_32:ADDER|C[28]~29 ; |ALU|cla_32:ADDER|C[28]~29 ; combout          ;
; |ALU|cla_32:ADDER|G[29]    ; |ALU|cla_32:ADDER|G[29]    ; combout          ;
; |ALU|cla_32:ADDER|C[29]~30 ; |ALU|cla_32:ADDER|C[29]~30 ; combout          ;
; |ALU|cla_32:ADDER|G[30]    ; |ALU|cla_32:ADDER|G[30]    ; combout          ;
; |ALU|cla_32:ADDER|C[30]~31 ; |ALU|cla_32:ADDER|C[30]~31 ; combout          ;
; |ALU|cla_32:ADDER|G[31]    ; |ALU|cla_32:ADDER|G[31]    ; combout          ;
; |ALU|cla_32:ADDER|C_OUT~0  ; |ALU|cla_32:ADDER|C_OUT~0  ; combout          ;
; |ALU|OPRND_1[7]            ; |ALU|OPRND_1[7]~corein     ; combout          ;
; |ALU|OPRND_2[7]            ; |ALU|OPRND_2[7]~corein     ; combout          ;
; |ALU|OPRND_1[8]            ; |ALU|OPRND_1[8]~corein     ; combout          ;
; |ALU|OPRND_2[8]            ; |ALU|OPRND_2[8]~corein     ; combout          ;
; |ALU|OPRND_1[9]            ; |ALU|OPRND_1[9]~corein     ; combout          ;
; |ALU|OPRND_2[9]            ; |ALU|OPRND_2[9]~corein     ; combout          ;
; |ALU|OPRND_1[10]           ; |ALU|OPRND_1[10]~corein    ; combout          ;
; |ALU|OPRND_2[10]           ; |ALU|OPRND_2[10]~corein    ; combout          ;
; |ALU|OPRND_1[11]           ; |ALU|OPRND_1[11]~corein    ; combout          ;
; |ALU|OPRND_2[11]           ; |ALU|OPRND_2[11]~corein    ; combout          ;
; |ALU|OPRND_1[12]           ; |ALU|OPRND_1[12]~corein    ; combout          ;
; |ALU|OPRND_2[12]           ; |ALU|OPRND_2[12]~corein    ; combout          ;
; |ALU|OPRND_1[13]           ; |ALU|OPRND_1[13]~corein    ; combout          ;
; |ALU|OPRND_2[13]           ; |ALU|OPRND_2[13]~corein    ; combout          ;
; |ALU|OPRND_1[14]           ; |ALU|OPRND_1[14]~corein    ; combout          ;
; |ALU|OPRND_2[14]           ; |ALU|OPRND_2[14]~corein    ; combout          ;
; |ALU|OPRND_1[15]           ; |ALU|OPRND_1[15]~corein    ; combout          ;
; |ALU|OPRND_2[15]           ; |ALU|OPRND_2[15]~corein    ; combout          ;
; |ALU|OPRND_1[16]           ; |ALU|OPRND_1[16]~corein    ; combout          ;
; |ALU|OPRND_2[16]           ; |ALU|OPRND_2[16]~corein    ; combout          ;
; |ALU|OPRND_1[17]           ; |ALU|OPRND_1[17]~corein    ; combout          ;
; |ALU|OPRND_2[17]           ; |ALU|OPRND_2[17]~corein    ; combout          ;
; |ALU|OPRND_1[18]           ; |ALU|OPRND_1[18]~corein    ; combout          ;
; |ALU|OPRND_2[18]           ; |ALU|OPRND_2[18]~corein    ; combout          ;
; |ALU|OPRND_1[19]           ; |ALU|OPRND_1[19]~corein    ; combout          ;
; |ALU|OPRND_2[19]           ; |ALU|OPRND_2[19]~corein    ; combout          ;
; |ALU|OPRND_1[20]           ; |ALU|OPRND_1[20]~corein    ; combout          ;
; |ALU|OPRND_2[20]           ; |ALU|OPRND_2[20]~corein    ; combout          ;
; |ALU|OPRND_1[21]           ; |ALU|OPRND_1[21]~corein    ; combout          ;
; |ALU|OPRND_2[21]           ; |ALU|OPRND_2[21]~corein    ; combout          ;
; |ALU|OPRND_1[22]           ; |ALU|OPRND_1[22]~corein    ; combout          ;
; |ALU|OPRND_2[22]           ; |ALU|OPRND_2[22]~corein    ; combout          ;
; |ALU|OPRND_1[23]           ; |ALU|OPRND_1[23]~corein    ; combout          ;
; |ALU|OPRND_2[23]           ; |ALU|OPRND_2[23]~corein    ; combout          ;
; |ALU|OPRND_1[24]           ; |ALU|OPRND_1[24]~corein    ; combout          ;
; |ALU|OPRND_2[24]           ; |ALU|OPRND_2[24]~corein    ; combout          ;
; |ALU|OPRND_1[25]           ; |ALU|OPRND_1[25]~corein    ; combout          ;
; |ALU|OPRND_2[25]           ; |ALU|OPRND_2[25]~corein    ; combout          ;
; |ALU|OPRND_1[26]           ; |ALU|OPRND_1[26]~corein    ; combout          ;
; |ALU|OPRND_2[26]           ; |ALU|OPRND_2[26]~corein    ; combout          ;
; |ALU|OPRND_1[27]           ; |ALU|OPRND_1[27]~corein    ; combout          ;
; |ALU|OPRND_2[27]           ; |ALU|OPRND_2[27]~corein    ; combout          ;
; |ALU|OPRND_1[28]           ; |ALU|OPRND_1[28]~corein    ; combout          ;
; |ALU|OPRND_2[28]           ; |ALU|OPRND_2[28]~corein    ; combout          ;
; |ALU|OPRND_1[29]           ; |ALU|OPRND_1[29]~corein    ; combout          ;
; |ALU|OPRND_2[29]           ; |ALU|OPRND_2[29]~corein    ; combout          ;
; |ALU|OPRND_1[30]           ; |ALU|OPRND_1[30]~corein    ; combout          ;
; |ALU|OPRND_2[30]           ; |ALU|OPRND_2[30]~corein    ; combout          ;
; |ALU|OPRND_1[31]           ; |ALU|OPRND_1[31]~corein    ; combout          ;
; |ALU|OPRND_2[31]           ; |ALU|OPRND_2[31]~corein    ; combout          ;
+----------------------------+----------------------------+------------------+


The following table displays output ports that do not toggle to 0 during simulation.
+----------------------------------------------------------------------------+
; Missing 0-Value Coverage                                                   ;
+----------------------------+----------------------------+------------------+
; Node Name                  ; Output Port Name           ; Output Port Type ;
+----------------------------+----------------------------+------------------+
; |ALU|Add0~16               ; |ALU|Add0~17               ; cout             ;
; |ALU|Add0~18               ; |ALU|Add0~19               ; cout             ;
; |ALU|Add0~20               ; |ALU|Add0~21               ; cout             ;
; |ALU|Add0~22               ; |ALU|Add0~23               ; cout             ;
; |ALU|Add0~24               ; |ALU|Add0~25               ; cout             ;
; |ALU|Add0~26               ; |ALU|Add0~27               ; cout             ;
; |ALU|Add0~28               ; |ALU|Add0~29               ; cout             ;
; |ALU|Add0~30               ; |ALU|Add0~31               ; cout             ;
; |ALU|Add0~32               ; |ALU|Add0~33               ; cout             ;
; |ALU|Add0~34               ; |ALU|Add0~35               ; cout             ;
; |ALU|Add0~36               ; |ALU|Add0~37               ; cout             ;
; |ALU|Add0~38               ; |ALU|Add0~39               ; cout             ;
; |ALU|Add0~40               ; |ALU|Add0~41               ; cout             ;
; |ALU|Add0~42               ; |ALU|Add0~43               ; cout             ;
; |ALU|Add0~44               ; |ALU|Add0~45               ; cout             ;
; |ALU|Add0~46               ; |ALU|Add0~47               ; cout             ;
; |ALU|Add0~48               ; |ALU|Add0~49               ; cout             ;
; |ALU|Add0~50               ; |ALU|Add0~51               ; cout             ;
; |ALU|Add0~52               ; |ALU|Add0~53               ; cout             ;
; |ALU|Add0~54               ; |ALU|Add0~55               ; cout             ;
; |ALU|Add0~56               ; |ALU|Add0~57               ; cout             ;
; |ALU|Add0~58               ; |ALU|Add0~59               ; cout             ;
; |ALU|Add0~60               ; |ALU|Add0~61               ; cout             ;
; |ALU|Add0~62               ; |ALU|Add0~63               ; cout             ;
; |ALU|cla_32:ADDER|G[7]     ; |ALU|cla_32:ADDER|G[7]     ; combout          ;
; |ALU|cla_32:ADDER|G[8]     ; |ALU|cla_32:ADDER|G[8]     ; combout          ;
; |ALU|cla_32:ADDER|G[9]     ; |ALU|cla_32:ADDER|G[9]     ; combout          ;
; |ALU|cla_32:ADDER|G[10]    ; |ALU|cla_32:ADDER|G[10]    ; combout          ;
; |ALU|cla_32:ADDER|G[11]    ; |ALU|cla_32:ADDER|G[11]    ; combout          ;
; |ALU|cla_32:ADDER|G[12]    ; |ALU|cla_32:ADDER|G[12]    ; combout          ;
; |ALU|cla_32:ADDER|G[13]    ; |ALU|cla_32:ADDER|G[13]    ; combout          ;
; |ALU|cla_32:ADDER|G[14]    ; |ALU|cla_32:ADDER|G[14]    ; combout          ;
; |ALU|cla_32:ADDER|G[15]    ; |ALU|cla_32:ADDER|G[15]    ; combout          ;
; |ALU|cla_32:ADDER|G[16]    ; |ALU|cla_32:ADDER|G[16]    ; combout          ;
; |ALU|cla_32:ADDER|C[16]~17 ; |ALU|cla_32:ADDER|C[16]~17 ; combout          ;
; |ALU|cla_32:ADDER|G[17]    ; |ALU|cla_32:ADDER|G[17]    ; combout          ;
; |ALU|cla_32:ADDER|C[17]~18 ; |ALU|cla_32:ADDER|C[17]~18 ; combout          ;
; |ALU|cla_32:ADDER|G[18]    ; |ALU|cla_32:ADDER|G[18]    ; combout          ;
; |ALU|cla_32:ADDER|C[18]~19 ; |ALU|cla_32:ADDER|C[18]~19 ; combout          ;
; |ALU|cla_32:ADDER|G[19]    ; |ALU|cla_32:ADDER|G[19]    ; combout          ;
; |ALU|cla_32:ADDER|C[19]~20 ; |ALU|cla_32:ADDER|C[19]~20 ; combout          ;
; |ALU|cla_32:ADDER|G[20]    ; |ALU|cla_32:ADDER|G[20]    ; combout          ;
; |ALU|cla_32:ADDER|C[20]~21 ; |ALU|cla_32:ADDER|C[20]~21 ; combout          ;
; |ALU|cla_32:ADDER|G[21]    ; |ALU|cla_32:ADDER|G[21]    ; combout          ;
; |ALU|cla_32:ADDER|C[21]~22 ; |ALU|cla_32:ADDER|C[21]~22 ; combout          ;
; |ALU|cla_32:ADDER|G[22]    ; |ALU|cla_32:ADDER|G[22]    ; combout          ;
; |ALU|cla_32:ADDER|C[22]~23 ; |ALU|cla_32:ADDER|C[22]~23 ; combout          ;
; |ALU|cla_32:ADDER|G[23]    ; |ALU|cla_32:ADDER|G[23]    ; combout          ;
; |ALU|cla_32:ADDER|C[23]~24 ; |ALU|cla_32:ADDER|C[23]~24 ; combout          ;
; |ALU|cla_32:ADDER|G[24]    ; |ALU|cla_32:ADDER|G[24]    ; combout          ;
; |ALU|cla_32:ADDER|C[24]~25 ; |ALU|cla_32:ADDER|C[24]~25 ; combout          ;
; |ALU|cla_32:ADDER|G[25]    ; |ALU|cla_32:ADDER|G[25]    ; combout          ;
; |ALU|cla_32:ADDER|C[25]~26 ; |ALU|cla_32:ADDER|C[25]~26 ; combout          ;
; |ALU|cla_32:ADDER|G[26]    ; |ALU|cla_32:ADDER|G[26]    ; combout          ;
; |ALU|cla_32:ADDER|C[26]~27 ; |ALU|cla_32:ADDER|C[26]~27 ; combout          ;
; |ALU|cla_32:ADDER|G[27]    ; |ALU|cla_32:ADDER|G[27]    ; combout          ;
; |ALU|cla_32:ADDER|C[27]~28 ; |ALU|cla_32:ADDER|C[27]~28 ; combout          ;
; |ALU|cla_32:ADDER|G[28]    ; |ALU|cla_32:ADDER|G[28]    ; combout          ;
; |ALU|cla_32:ADDER|C[28]~29 ; |ALU|cla_32:ADDER|C[28]~29 ; combout          ;
; |ALU|cla_32:ADDER|G[29]    ; |ALU|cla_32:ADDER|G[29]    ; combout          ;
; |ALU|cla_32:ADDER|C[29]~30 ; |ALU|cla_32:ADDER|C[29]~30 ; combout          ;
; |ALU|cla_32:ADDER|G[30]    ; |ALU|cla_32:ADDER|G[30]    ; combout          ;
; |ALU|cla_32:ADDER|C[30]~31 ; |ALU|cla_32:ADDER|C[30]~31 ; combout          ;
; |ALU|cla_32:ADDER|G[31]    ; |ALU|cla_32:ADDER|G[31]    ; combout          ;
; |ALU|cla_32:ADDER|C_OUT~0  ; |ALU|cla_32:ADDER|C_OUT~0  ; combout          ;
; |ALU|OPRND_1[6]            ; |ALU|OPRND_1[6]~corein     ; combout          ;
; |ALU|OPRND_2[6]            ; |ALU|OPRND_2[6]~corein     ; combout          ;
; |ALU|OPRND_1[7]            ; |ALU|OPRND_1[7]~corein     ; combout          ;
; |ALU|OPRND_2[7]            ; |ALU|OPRND_2[7]~corein     ; combout          ;
; |ALU|OPRND_1[8]            ; |ALU|OPRND_1[8]~corein     ; combout          ;
; |ALU|OPRND_2[8]            ; |ALU|OPRND_2[8]~corein     ; combout          ;
; |ALU|OPRND_1[9]            ; |ALU|OPRND_1[9]~corein     ; combout          ;
; |ALU|OPRND_2[9]            ; |ALU|OPRND_2[9]~corein     ; combout          ;
; |ALU|OPRND_1[10]           ; |ALU|OPRND_1[10]~corein    ; combout          ;
; |ALU|OPRND_2[10]           ; |ALU|OPRND_2[10]~corein    ; combout          ;
; |ALU|OPRND_1[11]           ; |ALU|OPRND_1[11]~corein    ; combout          ;
; |ALU|OPRND_2[11]           ; |ALU|OPRND_2[11]~corein    ; combout          ;
; |ALU|OPRND_1[12]           ; |ALU|OPRND_1[12]~corein    ; combout          ;
; |ALU|OPRND_2[12]           ; |ALU|OPRND_2[12]~corein    ; combout          ;
; |ALU|OPRND_1[13]           ; |ALU|OPRND_1[13]~corein    ; combout          ;
; |ALU|OPRND_2[13]           ; |ALU|OPRND_2[13]~corein    ; combout          ;
; |ALU|OPRND_1[14]           ; |ALU|OPRND_1[14]~corein    ; combout          ;
; |ALU|OPRND_2[14]           ; |ALU|OPRND_2[14]~corein    ; combout          ;
; |ALU|OPRND_1[15]           ; |ALU|OPRND_1[15]~corein    ; combout          ;
; |ALU|OPRND_2[15]           ; |ALU|OPRND_2[15]~corein    ; combout          ;
; |ALU|OPRND_1[16]           ; |ALU|OPRND_1[16]~corein    ; combout          ;
; |ALU|OPRND_2[16]           ; |ALU|OPRND_2[16]~corein    ; combout          ;
; |ALU|OPRND_1[17]           ; |ALU|OPRND_1[17]~corein    ; combout          ;
; |ALU|OPRND_2[17]           ; |ALU|OPRND_2[17]~corein    ; combout          ;
; |ALU|OPRND_1[18]           ; |ALU|OPRND_1[18]~corein    ; combout          ;
; |ALU|OPRND_2[18]           ; |ALU|OPRND_2[18]~corein    ; combout          ;
; |ALU|OPRND_1[19]           ; |ALU|OPRND_1[19]~corein    ; combout          ;
; |ALU|OPRND_2[19]           ; |ALU|OPRND_2[19]~corein    ; combout          ;
; |ALU|OPRND_1[20]           ; |ALU|OPRND_1[20]~corein    ; combout          ;
; |ALU|OPRND_2[20]           ; |ALU|OPRND_2[20]~corein    ; combout          ;
; |ALU|OPRND_1[21]           ; |ALU|OPRND_1[21]~corein    ; combout          ;
; |ALU|OPRND_2[21]           ; |ALU|OPRND_2[21]~corein    ; combout          ;
; |ALU|OPRND_1[22]           ; |ALU|OPRND_1[22]~corein    ; combout          ;
; |ALU|OPRND_2[22]           ; |ALU|OPRND_2[22]~corein    ; combout          ;
; |ALU|OPRND_1[23]           ; |ALU|OPRND_1[23]~corein    ; combout          ;
; |ALU|OPRND_2[23]           ; |ALU|OPRND_2[23]~corein    ; combout          ;
; |ALU|OPRND_1[24]           ; |ALU|OPRND_1[24]~corein    ; combout          ;
; |ALU|OPRND_2[24]           ; |ALU|OPRND_2[24]~corein    ; combout          ;
; |ALU|OPRND_1[25]           ; |ALU|OPRND_1[25]~corein    ; combout          ;
; |ALU|OPRND_2[25]           ; |ALU|OPRND_2[25]~corein    ; combout          ;
; |ALU|OPRND_1[26]           ; |ALU|OPRND_1[26]~corein    ; combout          ;
; |ALU|OPRND_2[26]           ; |ALU|OPRND_2[26]~corein    ; combout          ;
; |ALU|OPRND_1[27]           ; |ALU|OPRND_1[27]~corein    ; combout          ;
; |ALU|OPRND_2[27]           ; |ALU|OPRND_2[27]~corein    ; combout          ;
; |ALU|OPRND_1[28]           ; |ALU|OPRND_1[28]~corein    ; combout          ;
; |ALU|OPRND_2[28]           ; |ALU|OPRND_2[28]~corein    ; combout          ;
; |ALU|OPRND_1[29]           ; |ALU|OPRND_1[29]~corein    ; combout          ;
; |ALU|OPRND_2[29]           ; |ALU|OPRND_2[29]~corein    ; combout          ;
; |ALU|OPRND_1[30]           ; |ALU|OPRND_1[30]~corein    ; combout          ;
; |ALU|OPRND_2[30]           ; |ALU|OPRND_2[30]~corein    ; combout          ;
; |ALU|OPRND_1[31]           ; |ALU|OPRND_1[31]~corein    ; combout          ;
; |ALU|OPRND_2[31]           ; |ALU|OPRND_2[31]~corein    ; combout          ;
+----------------------------+----------------------------+------------------+


+---------------------+
; Simulator INI Usage ;
+--------+------------+
; Option ; Usage      ;
+--------+------------+


+--------------------+
; Simulator Messages ;
+--------------------+
Info: *******************************************************************
Info: Running Quartus II Simulator
    Info: Version 9.1 Build 350 03/24/2010 Service Pack 2 SJ Web Edition
    Info: Processing started: Mon Nov 13 13:31:08 2023
Info: Command: quartus_sim --read_settings_files=on --write_settings_files=off ALU -c ALU
Info: Using vector source file "D:/Dimas Github/Praktikum-Arsikom/EL3111_04_20231107_13221076/1_Lab/Tugas_5/ALU.vwf"
Info: Overwriting simulation input file with simulation results
    Info: A backup of ALU.vwf called ALU.sim_ori.vwf has been created in the db folder
Info: Option to preserve fewer signal transitions to reduce memory requirements is enabled
    Info: Simulation has been partitioned into sub-simulations according to the maximum transition count determined by the engine. Transitions from memory will be flushed out to disk at the end of each sub-simulation to reduce memory requirements.
Info: Simulation partitioned into 1 sub-simulations
Info: Simulation coverage is      54.30 %
Info: Number of transitions in simulation is 35516
Info: Vector file ALU.vwf is saved in VWF text format. You can compress it into CVWF format in order to reduce file size. For more details please refer to the Quartus II Help.
Info: Quartus II Simulator was successful. 0 errors, 0 warnings
    Info: Peak virtual memory: 151 megabytes
    Info: Processing ended: Mon Nov 13 13:31:08 2023
    Info: Elapsed time: 00:00:00
    Info: Total CPU time (on all processors): 00:00:00


